; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = examples/src
test_dir = test

[env]
test_framework = unity
;monitor_raw = yes
lib_deps =
  https://github.com/nicklasb/robusto-platformio.git

build_type = debug


[env:Native]
; Linux/MacOs/Windows functionality.
platform=native
lib_extra_dirs = components, test
; If there is a way to make things work without turning of compatibility checks?
lib_compat_mode = off
build_flags =
  --coverage
debug_test = *

extra_scripts = 
  ${env.extra_scripts}
  test/test-coverage.py

[env:Devkit_v4_no_network]
; Used with the The ESP32 devkit board
platform = espressif32@6.6.0
framework = espidf
board = az-delivery-devkit-v4

monitor_port = /dev/cu.usbserial-0001
upload_port = /dev/cu.usbserial-0001
test_port = /dev/cu.usbserial-0001
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

;lib_extra_dirs = test
; Better partioning
board_build.partitions = min_spiffs.csv


[env:TTGO-LoRa32-v1]
; Used with the The TTGO LORA32 SX1278 board

platform = espressif32@6.6.0 
framework = espidf
board = ttgo-lora32-v1

monitor_port = /dev/cu.wchusbserial531C0101801
upload_port = /dev/cu.wchusbserial531C0101801
test_port = /dev/cu.wchusbserial531C0101801
;debug_test = *
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
;lib_extra_dirs = test
; Private: MAC 58bf250541e0
lib_deps = 
  ${env.lib_deps}
  adafruit/Adafruit SSD1306@^2.5.7

; Better partioning
board_build.partitions = min_spiffs.csv
